<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>